<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>